<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>